<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>